<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>